<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>